<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>